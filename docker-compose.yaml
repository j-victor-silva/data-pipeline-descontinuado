version: "3.8"

services:
  app:
    build:
      context: ./
      dockerfile: ./Docker/app-mysql/Dockerfile
    environment:
      - MONGO_URI=mongodb://root:root@mongo:27017
    volumes:
      - ./:/app
    links:
      - mysql
    depends_on:
      mysql:
        condition: service_healthy
      mongo:
        condition: service_started
#      fake_data:
#        condition: service_completed_successfully
#
#  fake_data:
#    build:
#      context: ./
#      dockerfile: ./Docker/app-data/Dockerfile
#    volumes:
#      - ./.fake-data/:/app

  mysql:
    image: mysql:latest
    restart: on-failure
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 0
    environment:
      - MYSQL_ROOT_USERNAME=root
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=${DATABASE}
    volumes:
      - mysql-data:/var/lib/mysql
      - mysql-config:/etc/mysql

  mongo:
    image: mongo:latest
    restart: on-failure
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    volumes:
      - mongodb-data:/data/db

volumes:
  mysql-data:
    driver: local
  mysql-config:
    driver: local
  mongodb-data:
    driver: local
  .fake-data:
    driver: local
